# Generated by Django 2.2.1 on 2019-12-04 15:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('location', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_created=True, auto_now=True, verbose_name='更新时间')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='创建时间')),
                ('material_name', models.CharField(default='默认物料', max_length=100, verbose_name='物料名称')),
                ('material_code', models.CharField(default='', max_length=100, verbose_name='物料编号')),
                ('material_sn', models.CharField(default='', max_length=100, verbose_name='物料SN码')),
                ('material_sku', models.CharField(default='', max_length=100, verbose_name='物料SKU码')),
                ('weight', models.IntegerField(blank=True, default=0, verbose_name='物料重量')),
                ('length', models.IntegerField(blank=True, default=0, verbose_name='物料长度')),
                ('width', models.IntegerField(blank=True, default=0, verbose_name='物料宽度')),
                ('height', models.IntegerField(blank=True, default=0, verbose_name='物料高度')),
                ('material_number', models.IntegerField(default=0, verbose_name='物料数量')),
                ('quality_status', models.PositiveSmallIntegerField(choices=[(4, '半成品'), (5, '不良品'), (1, '良品'), (3, '待检品')], default=1, verbose_name='物料高度')),
                ('status', models.PositiveSmallIntegerField(choices=[(3, '待检'), (0, '待入库'), (1, '在库'), (2, '正在入库'), (4, '已过期'), (-1, '删除'), (5, '在出库'), (6, '已出库'), (7, '正在打包')], default=0, verbose_name='物料状态')),
                ('product_time', models.DateTimeField(blank=True, default='', verbose_name='生产日期')),
                ('expired_time', models.DateTimeField(blank=True, default='', verbose_name='过期日期')),
            ],
            options={
                'verbose_name': '物料信息',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='MaterialCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_created=True, auto_now=True, verbose_name='更新时间')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='创建时间')),
                ('category_name', models.CharField(default='', max_length=100, verbose_name='类别名称')),
            ],
            options={
                'verbose_name': '物料类别',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='MaterialLocationRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_created=True, auto_now=True, verbose_name='更新时间')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='创建时间')),
                ('operator_source', models.PositiveSmallIntegerField(blank=True, choices=[(1, '电脑端网页'), (2, '移动端M站'), (3, 'WebAPP'), (4, '微信网页'), (5, 'IOS客户端'), (6, 'Android客户端'), (7, '工厂PDR设备'), (8, '微信小程序')], default=1, null=True, verbose_name='操作终端')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='location.StoreLocation', verbose_name='库位ID')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='material.Material', verbose_name='物料ID')),
                ('operator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_location_actions', to=settings.AUTH_USER_MODEL, verbose_name='操作人')),
            ],
            options={
                'verbose_name': '物料入库记录',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='MaterialCategoryRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_created=True, auto_now=True, verbose_name='更新时间')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='创建时间')),
                ('operator_source', models.PositiveSmallIntegerField(blank=True, choices=[(1, '电脑端网页'), (2, '移动端M站'), (3, 'WebAPP'), (4, '微信网页'), (5, 'IOS客户端'), (6, 'Android客户端'), (7, '工厂PDR设备'), (8, '微信小程序')], default=1, verbose_name='操作终端')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='material.MaterialCategory', verbose_name='物料类别ID')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='material.Material', verbose_name='物料ID')),
                ('operator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='material_category_actions', to=settings.AUTH_USER_MODEL, verbose_name='操作人')),
            ],
            options={
                'verbose_name': '物料分类记录',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='material',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='material_categories', through='material.MaterialCategoryRecord', to='material.MaterialCategory', verbose_name='物料分类'),
        ),
        migrations.AddField(
            model_name='material',
            name='location',
            field=models.ManyToManyField(blank=True, related_name='material_locations', through='material.MaterialLocationRecord', to='location.StoreLocation', verbose_name='客户'),
        ),
    ]
